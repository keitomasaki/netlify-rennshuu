{"version":3,"sources":["container/products/actions.js","container/store/initialState.js","data/data.js","container/products/operation.js","container/products/reducer.js","config/messages.js","container/products/selector.js","App.js","reportWebVitals.js","index.js","container/store/store.js"],"names":["MONEY_TO_CHAR","initialState","products","result","exponents","kanjiNames","kanjiNums","moneyToChar","str","changedStr","numbersToKanji","num","ret","i","length","bias","Math","pow","top","floor","ProductsReducer","state","action","type","Actions","newResult","payload","messages","OVER_MAX_LENGTH","getResult","createSelector","IS_ONLY_NUMBER_AND_HALF_WIDTH","RegExp","IS_ONLY_NUMBER_AND_FULL_WIDTH","IS_ONLY_NUMBER_AND_FULL_WIDTH_AND_HALF_WIDTH","IS_ZERO","App","dispatch","useDispatch","selector","useSelector","useState","money","setMoney","isResultShow","setIsResultShow","className","Grid","container","spacing","alignItems","justify","item","TextField","required","label","variant","onChange","e","LAST_STR","target","value","slice","FIRST_STR","alert","test","undefined","handleChangeMoney","inputProps","style","fontSize","onClick","passedValue","moji","convert","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","reduxCreateStore","combineReducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10a1a3f2.chunk.js","sourcesContent":["export const MONEY_TO_CHAR = \"MONEY_TO_CHAR\";\nexport const moneyToCharAction = (num) => {\n  return {\n    type: MONEY_TO_CHAR,\n    payload: num,\n  };\n};\n","export const initialState = {\n  products: {\n    result: \"\",\n  },\n};\n","export const exponents = [1, 2, 3, 4, 8, 12];\n\nexport const kanjiNames = [\n  \"十\",\n  \"百\",\n  \"千\",\n  \"万\",\n  \"億\",\n  \"兆\",\n  \"京\",\n  \"垓\",\n  \"𥝱\",\n  \"穣\",\n  \"溝\",\n  \"澗\",\n  \"正\",\n  \"載\",\n  \"極\",\n  \"恒河沙\",\n  \"阿僧祇\",\n  \"那由他\",\n  \"不可思議\",\n  \"無量大数\",\n];\n\nexport const kanjiNums = [\n  \"\",\n  \"一\",\n  \"二\",\n  \"三\",\n  \"四\",\n  \"五\",\n  \"六\",\n  \"七\",\n  \"八\",\n  \"九\",\n];\n\nexport const suujiList = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n","import { kanjiNums, kanjiNames, exponents } from \"../../data/data\";\n\nexport const moneyToChar = (str) => {\n  let changedStr = numbersToKanji(str);\n\n  function numbersToKanji(num) {\n    let ret = \"\";\n    const exponentsLen = exponents.length;\n    for (let i = exponentsLen; i >= 0; --i) {\n      const bias = Math.pow(10, exponents[i]);\n      if (num >= bias) {\n        const top = Math.floor(num / bias);\n        if (top >= 10) {\n          ret += numbersToKanji(top);\n        } else {\n          if (top === 1 && exponents[i] <= 3) {\n            // ※先頭の数字が1、かつ指数が3 (千の位) 以下の場合のみ『一』をつけない\n          } else {\n            ret += kanjiNums[top];\n          }\n        }\n        ret += kanjiNames[i];\n        num -= top * bias;\n      }\n    }\n    ret += `${kanjiNums[num]}`;\n    return ret;\n  }\n\n  if (changedStr === \"undefined\") {\n    changedStr = \"正常に変換することができませんでした\";\n  }\n  return changedStr;\n};\n","import * as Actions from \"./actions\";\nimport { initialState } from \"../store/initialState\";\nimport { moneyToChar } from \"./operation\";\n\nexport const ProductsReducer = (state = initialState.products, action) => {\n  switch (action.type) {\n    case Actions.MONEY_TO_CHAR:\n      const newResult = moneyToChar(action.payload);\n      return {\n        ...state,\n        result: newResult,\n      };\n    default:\n      return state;\n  }\n};\n","const messages = {\n  OVER_MAX_LENGTH: (num) =>\n    `制限文字数を超えています。制限文字数は${num}文字です。`,\n};\n\nexport default messages;\n","import { createSelector } from \"reselect\";\n\nconst usersSelector = (state) => state.products;\n\nexport const getResult = createSelector(\n  [usersSelector],\n  (state) => state.result\n);\n","import { React, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./styles/App.css\";\nimport \"./styles/helper.css\";\nimport messages from \"./config/messages\";\nimport { getResult } from \"./container/products/selector\";\nimport * as Actions from \"./container/products/actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MonetizationOnOutlinedIcon from \"@material-ui/icons/MonetizationOnOutlined\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport PanoramaFishEyeIcon from \"@material-ui/icons/PanoramaFishEye\";\nimport moji from \"moji\";\n\nconst MAX_STR_LENGTH = 13; //入力できる文字数の限界値\n//正規表現パターン\nconst IS_ONLY_NUMBER_AND_HALF_WIDTH = new RegExp(/^[0-9]*$/);\nconst IS_ONLY_NUMBER_AND_FULL_WIDTH = new RegExp(/^[０-９]*$/);\nconst IS_ONLY_NUMBER_AND_FULL_WIDTH_AND_HALF_WIDTH = new RegExp(\n  /^[０-９0-9]*$/\n);\nconst IS_ZERO = new RegExp(/^[0０]*$/);\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const result = getResult(selector); //config/products/operationのmoneyToChar関数の処理結果\n  const [money, setMoney] = useState(\"\");\n  const [isResultShow, setIsResultShow] = useState(false);\n\n  const handleChangeMoney = (e) => {\n    const LAST_STR = e.target.value.slice(-1);\n    const FIRST_STR = e.target.value.slice(0, 1);\n    const { value } = e.target;\n\n    if (value.length > MAX_STR_LENGTH) {\n      alert(messages.OVER_MAX_LENGTH(MAX_STR_LENGTH));\n      return null;\n    }\n    if (IS_ZERO.test(FIRST_STR) && value[0] !== undefined) {\n      alert(\"先頭に０を指定することはできません\");\n      return null;\n    }\n    if (!IS_ONLY_NUMBER_AND_FULL_WIDTH_AND_HALF_WIDTH.test(LAST_STR)) {\n      alert(\"数字が使われていません\");\n      return null;\n    }\n\n    if (IS_ONLY_NUMBER_AND_HALF_WIDTH.test(FIRST_STR)) {\n      if (value.length > 1 && IS_ONLY_NUMBER_AND_FULL_WIDTH.test(LAST_STR)) {\n        alert(\"半角と全角を混同しないでください。最初の文字は半角です\");\n      } else {\n        setMoney(value);\n      }\n    } else if (IS_ONLY_NUMBER_AND_FULL_WIDTH.test(FIRST_STR)) {\n      if (value.length > 1 && IS_ONLY_NUMBER_AND_HALF_WIDTH.test(LAST_STR)) {\n        alert(\"半角と全角を混同しないでください。最初の文字は全角です\");\n      } else {\n        setMoney(value);\n      }\n    }\n  };\n\n  const determineMoney = () => {\n    let passedValue = \"\";\n    if (IS_ONLY_NUMBER_AND_HALF_WIDTH.test(money)) {\n      passedValue = money;\n    } else if (IS_ONLY_NUMBER_AND_FULL_WIDTH.test(money)) {\n      passedValue = moji(money).convert(\"ZE\", \"HE\").toString();\n    }\n    dispatch(Actions.moneyToCharAction(passedValue));\n    setIsResultShow(true);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <div className=\"header-inner\">\n          <h1 className=\"header__title\">金額を漢数字に変換できるサイト</h1>\n          <p className=\"header__text\">\n            このサイトは金額を漢数字に変換することができるサイトです。<br></br>\n            請求書などを作成する時に使用すると便利です。\n          </p>\n        </div>\n      </header>\n      <div className=\"container\">\n        <div className=\"container-info\">\n          <div className=\"container-info__inner\">\n            <div className=\"container-info__inner__item\">\n              <CancelIcon className=\"info-Icon \" />\n              <p className=\"container-info__text\">\n                数字のみ変換することができます。アルファベット、カタカナ、ひらがな等は変換できません。\n              </p>\n            </div>\n            <div className=\"container-info__inner__item\">\n              <PanoramaFishEyeIcon className=\"info-Icon \" />\n              <p className=\"container-info__text\">\n                数字は全角・半角、どちらでも変換することができます。\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"hp_mt20\">\n          <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\n            <Grid item>\n              <MonetizationOnOutlinedIcon className=\"MonetizationOnOutlinedIcon\" />\n            </Grid>\n            <Grid item>\n              <TextField\n                required\n                label=\"金額(数字のみ)\"\n                variant=\"outlined\"\n                onChange={(e) => handleChangeMoney(e)}\n                value={money}\n                inputProps={{\n                  style: { fontSize: 20 },\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <button className=\"button\" onClick={determineMoney}>\n                変換\n              </button>\n            </Grid>\n          </Grid>\n        </div>\n        {isResultShow && (\n          <p className=\"container_result-text\">\n            {result !== \"正常に変換することができませんでした\"\n              ? `${result} 円`\n              : result}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport createStore from \"./container/store/store\";\nimport \"./styles/reset.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nexport const store = createStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore as reduxCreateStore, combineReducers } from \"redux\";\nimport { ProductsReducer } from \"../products/reducer\";\n\nexport default function createStore() {\n  return reduxCreateStore(\n    //オリジナル createStore の別名\n    combineReducers({\n      products: ProductsReducer,\n    })\n  );\n}\n"],"sourceRoot":""}