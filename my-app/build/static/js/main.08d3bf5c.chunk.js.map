{"version":3,"sources":["reducks/products/actions.js","reducks/store/initialState.js","data/data.js","reducks/products/operation.js","reducks/products/reducer.js","reducks/products/selector.js","App.js","reportWebVitals.js","index.js","reducks/store/store.js"],"names":["MONEY_TO_CHAR","initialState","products","result","exponents","kanjiNames","kanjiNums","moneyToChar","str","numbersToKanji","num","ret","i","length","bias","Math","pow","console","log","top","floor","ProductsReducer","state","action","type","Actions","newResult","payload","getResult","createSelector","App","dispatch","useDispatch","selector","useSelector","useState","money","setMoney","keyCode","determineMoney","className","Grid","container","spacing","alignItems","item","fontSize","TextField","required","label","variant","onChange","e","regex","RegExp","alert","test","target","value","handleChangeMoney","onKeyDown","keyPress","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","reduxCreateStore","combineReducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08d3bf5c.chunk.js","sourcesContent":["export const MONEY_TO_CHAR = \"MONEY_TO_CHAR\";\nexport const moneyToCharAction = (num) => {\n  return {\n    type: MONEY_TO_CHAR,\n    payload: num,\n  };\n};\n","export const initialState = {\n  products: {\n    result: \"\",\n  },\n};\n","export const exponents = [\n  1,\n  2,\n  3,\n  4,\n  8,\n  12,\n  // 16,\n  // 20,\n  // 24,\n  // 28,\n  // 32,\n  // 36,\n  // 40,\n  // 44,\n  // 48,\n  // 52,\n  // 56,\n  // 60,\n  // 64,\n  // 68,\n];\n\nexport const kanjiNames = [\n  \"十\",\n  \"百\",\n  \"千\",\n  \"万\",\n  \"億\",\n  \"兆\",\n  \"京\",\n  \"垓\",\n  \"𥝱\",\n  \"穣\",\n  \"溝\",\n  \"澗\",\n  \"正\",\n  \"載\",\n  \"極\",\n  \"恒河沙\",\n  \"阿僧祇\",\n  \"那由他\",\n  \"不可思議\",\n  \"無量大数\",\n];\n\nexport const kanjiNums = [\n  \"\",\n  \"一\",\n  \"二\",\n  \"三\",\n  \"四\",\n  \"五\",\n  \"六\",\n  \"七\",\n  \"八\",\n  \"九\",\n];\n","import { kanjiNums, kanjiNames, exponents } from \"../../data/data\";\n\nexport const moneyToChar = (str) => {\n  const changedStr = numbersToKanji(str);\n\n  function numbersToKanji(num) {\n    if (num === 0) {\n      return \"零\";\n    }\n    let ret = \"\";\n    const exponentsLen = exponents.length;\n    for (let i = exponentsLen; i >= 0; --i) {\n      const bias = Math.pow(10, exponents[i]);\n      console.log(\n        \"i\",\n        i,\n        \"bias\",\n        bias,\n        \"exponents[i]\",\n        exponents[i],\n        \"num\",\n        num\n      );\n      if (num >= bias) {\n        console.log(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\");\n        const top = Math.floor(num / bias);\n        // console.log(num / bias);\n        console.log(\"top\", top, \"bias\", bias, \"num\", num);\n        if (top >= 10) {\n          console.log(\"top >= 10\");\n          ret += numbersToKanji(top);\n        } else {\n          if (top == 1 && exponents[i] <= 3) {\n            // ※先頭の数字が1、かつ指数が3 (千の位) 以下の場合のみ『一』をつけない\n          } else {\n            ret += kanjiNums[top];\n            console.log(ret);\n          }\n        }\n        ret += kanjiNames[i];\n        console.log(ret);\n        num -= top * bias;\n        console.log(\"num\", num, \"top * bias\", top * bias);\n        console.log(\"================================\");\n      }\n    }\n    ret += kanjiNums[num];\n    console.log();\n    return ret;\n  }\n  return changedStr;\n};\n","import * as Actions from \"./actions\";\nimport { initialState } from \"../store/initialState\";\nimport { moneyToChar } from \"./operation\";\n\nexport const ProductsReducer = (state = initialState.products, action) => {\n  switch (action.type) {\n    case Actions.MONEY_TO_CHAR:\n      console.log(\"MONEY_TO_CHAR\");\n      console.log(state);\n      const newResult = moneyToChar(action.payload);\n      return {\n        ...state,\n        result: newResult,\n      };\n    default:\n      return state;\n  }\n};\n","import { createSelector } from \"reselect\";\n\nconst usersSelector = (state) => state.products;\n\nexport const getResult = createSelector(\n  [usersSelector],\n  (state) => state.result\n);\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getResult } from \"./reducks/products/selector\";\nimport * as Actions from \"./reducks/products/actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MonetizationOnOutlinedIcon from \"@material-ui/icons/MonetizationOnOutlined\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const [money, setMoney] = useState(\"\");\n  const result = getResult(selector);\n  let keyCode = null;\n\n  const determineMoney = () => {\n    dispatch(Actions.moneyToCharAction(money));\n  };\n\n  const keyPress = (e) => {\n    keyCode = e.keyCode;\n  };\n\n  const handleChangeMoney = (e) => {\n    //金額の限界値\n    const MAX_STR_LENGTH = 13;\n\n    //正規表現パターン（半角英数のみに一致）\n    var regex = new RegExp(/^[0-9]*$/);\n\n    //判定\n    if (keyCode === 32) {\n      alert(\"半角英数が使われていません。スペースキーが使われています\");\n    } else if (!regex.test(e.target.value)) {\n      alert(\"半角英数が使われていません。\");\n    } else if (e.target.value.length > MAX_STR_LENGTH) {\n      alert(`制限文字数を超えています。制限文字数は${MAX_STR_LENGTH}数です。`);\n    } else {\n      setMoney(e.target.value);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <p>正木のサイトです。ツールを開発しています</p>\n      <div>\n        <Grid container spacing={1} alignItems=\"flex-end\">\n          <Grid item>\n            <MonetizationOnOutlinedIcon fontSize=\"large\" />\n          </Grid>\n          <Grid item>\n            <TextField\n              required\n              label=\"金額　(半角英数のみ)\"\n              variant=\"outlined\"\n              onChange={(e) => handleChangeMoney(e)}\n              onKeyDown={(e) => keyPress(e)}\n              value={money}\n            />\n          </Grid>\n        </Grid>\n      </div>\n      <button onClick={() => determineMoney()}>button</button>\n      <h3>{result}</h3>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport createStore from \"./reducks/store/store\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nexport const store = createStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore as reduxCreateStore, combineReducers } from \"redux\";\nimport { ProductsReducer } from \"../products/reducer\";\n\nexport default function createStore() {\n  return reduxCreateStore(\n    //オリジナル createStore の別名\n    combineReducers({\n      products: ProductsReducer,\n    })\n  );\n}\n"],"sourceRoot":""}